-# we need to break from the .container and
-# also surround everything in a form

- content_for(:header) do
  / header overridden
- content_for(:main_container_class) {'non-container'}

/ has it's own form, so need it up here
=render :partial => 'shared/switch_jurisdiction', locals: {response_set: @response_set}
=render :partial => 'shared/switch_language', locals: {response_set: @response_set}

%header
  .container
    .row
      .span9
        .jurisdiction
          = t('surveys.jurisdiction')
          .badge.badge-inverse=  @response_set.jurisdiction
          %span.status= @survey.try(:status)
          = link_to "#switch-#{@response_set.id}", data: {toggle: :modal, content: t('dashboard.popover.change_jurisdiction') }, class: 'popdown changer' do
            %i.icon.icon-pencil
          = t('surveys.language')
          = certificate_locale_links(@response_set.jurisdiction)
          = link_to "#switch-language-#{@response_set.id}", data:{toggle: :modal}, class: 'changer' do
            %i.icon.icon-pencil
            = t('surveys.other_languages')

        %h1{'data-bind-to-input' => @survey.meta_map[:dataset_title]}= @response_set.title

#surveyor
  .container.survey-intro
    -if @url_error and @response_set.documentation_url_explanation.blank?
      .alert.alert-alert.flash{"data-dismiss" => "alert"}
        %i.icon-exclamation-sign.icon-large.icon-white
        %button.icon-remove{"data-dismiss" => "alert", :type => "button"}
        = t('surveys.url_problem_error')
    .well
      .row-fluid
        .span8.lead
          != @survey.intro
          %p
            %a{href: about_page_url}
              = t('surveys.read_more')

      = semantic_form_for [:start, @response_set] do |f|
        - question = @survey.documentation_url
        = f.label :documentation_url, question.heading

        .row-fluid
          .span8
            = f.url_field :documentation_url, class: 'string', placeholder: question.placeholder, value: @response_set.documentation_url || @documentation_url
            - explanation_class = "show" if @url_error
            #start_url_explanation.explanation{class: explanation_class}
              = f.input :documentation_url_explanation, as: :additional_text, label: t('surveyor.override_explanation_title'), subtitle: t('surveyor.url_explanation')

            .lead
              = t('surveys.dataset_description_html')
          .span4
            %button.btn.btn-large.btn-primary.submit{data:{toggle: 'popover', placement: 'bottom', content: t('surveys.please_wait_autocomplete'), error: t('surveys.url_unknown_error')}}
              %i.icon-loading.icon-spin.icon-refresh
              %i.icon-exclamation-sign
              = t('surveys.check_url_button')

        %p
          = t('surveys.do_not_have_url')
          %a.btn{href: 'take'}
            = t('surveys.skip_this_button')


/ #surveyor fieldset ol li label, #surveyor fieldset ol li input
- content_for(:foot_scripts) do
  :javascript
    $(document).ready(function() {
      Tracking.event('Questionnaire', 'begin', #{@response_set.access_code.to_json})
    });
