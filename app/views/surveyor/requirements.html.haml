- content_for(:header) do
  / header overridden
- content_for(:main_container_class) {'non-container improvements'}

.affixed
  %header
    .container
      .row
        .span9
          %h1= t('improvements.heading')
          %h3= @response_set.title
        .span3
          -if @response_set.incomplete?
            =button_to t('improvements.return_to_questionnaire'), resume_path, :method => 'post', :class => 'btn btn-primary btn-large return', :role => "button"
          -else
            =link_to t('improvements.return_to_dashboard'), dashboard_path, :class => 'btn btn-primary btn-large return', :role => "button"

- ['basic', 'pilot', 'standard', 'exemplar'].each do |level|

  - requirements = @requirements.select {|r| r.requirement_level == level}
  - fields = level == 'basic' ? @mandatory_fields : []

  - requirements.sort_by! {|requirement| requirement[:display_order]}
  - fields.sort_by!       {|field| field[:display_order]}

  - unless (requirements + fields).empty?

    %section{:class => "improvement"}

      %header
        .container
          %h2= t("improvements.levels.#{level}.title")
          %h3= t("improvements.levels.#{level}.subtitle")

      .requirements.container
        %p.instruction= t("improvements.levels.#{level}.instruction")
        %hr.heavy

        %ul
          -fields.each do |field|
            %li
              .dataset{class: defined?(expanded) ? 'expanded': ''}
                .requirement-title
                  %span= field.text.html_safe
                .expand
                  %i.show-more.icon-chevron-down
                  %i.hide-more.icon-chevron-up
                .more
                  .row
                    .span4
                      %p= markdown(field.help_text || '')
                    .span6.offset2
                      =button_to t('improvements.buttons.understood'), resume_path(field), method: 'post', class: 'btn btn-primary btn-large'
                      %a.btn.btn-primary.btn-large.btn-negative{:href => '/comment' }
                        =t('improvements.buttons.misunderstood')
              %hr.heavy

          -requirements.each do |requirement|
            - answer = requirement.answer_corresponding_to_requirement
            - question = requirement.question_corresponding_to_requirement || answer.try(:question)
            %li
              .dataset{class: defined?(expanded) ? 'expanded': ''}
                .requirement-title
                  %span= requirement.text.html_safe
                .expand
                  %i.show-more.icon-chevron-down
                  %i.hide-more.icon-chevron-up
                .more
                  .row
                    .span4
                      %p= markdown(answer.try(:help_text) || question.try(:help_text) || '')
                    .span6.offset2
                      =button_to t('improvements.buttons.understood'), resume_path(question), method: 'post', class: 'btn btn-primary btn-large'
                      %a.btn.btn-primary.btn-large.btn-negative{:href => '/comment'}
                        =t('improvements.buttons.misunderstood')
              %hr.heavy
